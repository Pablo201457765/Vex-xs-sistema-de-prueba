const REQUIRED_ICONS = ['configuracion.png','camara.png','galeria.png','notas.png','navegador.png','sobretelefono.png','idiomas.png','estilo.png','altura.png','fondopantalla.png'];
const APPS = [{id:'sobre', name:'Sobre el tel√©fono', icon:'sobretelefono.png'},{id:'configuracion', name:'Configuraci√≥n', icon:'configuracion.png'},{id:'camara', name:'C√°mara', icon:'camara.png'},{id:'galeria', name:'Galer√≠a', icon:'galeria.png'},{id:'notas', name:'Notas', icon:'notas.png'},{id:'navegador', name:'Navegador', icon:'navegador.png'}];
const MAX_GALLERY = 20;
const SETTINGS_KEY = 'vex_ultimate_plus_4_8';
let SETTINGS = JSON.parse(localStorage.getItem(SETTINGS_KEY) || '{}');
if(!SETTINGS.iconSize) SETTINGS.iconSize = 64; if(!SETTINGS.iconShape) SETTINGS.iconShape='circle';
let toastTimer=null;
function showToast(msg, t=8000){ const el = document.getElementById('toast'); el.textContent = msg; el.style.display='block'; if(toastTimer) clearTimeout(toastTimer); toastTimer = setTimeout(()=> el.style.display='none', t); }
function checkRequiredIcons(){ REQUIRED_ICONS.forEach(name => { const img = new Image(); img.onload = ()=>{}; img.onerror = ()=> showToast(`‚ö†Ô∏è Falta ${name} en la ra√≠z`, 10000); img.src = name + '?v=1'; }); }
function imgFallback(el){ el.src = placeholderSVG(); showToast('‚ö†Ô∏è Icono faltante: ' + (el.getAttribute('alt') || 'icon'),4000); }
function placeholderSVG(){ return 'data:image/svg+xml;utf8,' + encodeURIComponent(`<svg xmlns="http://www.w3.org/2000/svg" width="160" height="160"><rect rx="20" width="100%" height="100%" fill="#ddd"/><text x="50%" y="55%" font-size="40" text-anchor="middle" fill="#333">!</text></svg>`); }
function now(){ const d=new Date(); return String(d.getHours()).padStart(2,'0')+':'+String(d.getMinutes()).padStart(2,'0'); }
function dateStr(){ return new Date().toLocaleDateString(undefined, {weekday:'long', day:'numeric', month:'short'}); }
function tick(){ document.querySelectorAll('#lockClock,#homeTime').forEach(el=>el && (el.textContent = now())); const ld=document.getElementById('lockDate'); if(ld) ld.textContent = dateStr(); }
setInterval(tick,1000); tick();
function buildHome(){ const row = document.getElementById('appsRow'); row.innerHTML = ''; APPS.forEach(a=>{ const btn = document.createElement('button'); btn.className='app-tile'; btn.setAttribute('data-app', a.id); btn.innerHTML = `<img class="app-icon" src="${a.icon}" alt="${a.name}" onerror="imgFallback(this)"><div class="app-label">${a.name}</div>`; btn.addEventListener('click', ()=> openApp(a.id)); row.appendChild(btn); }); applyIconSettings(); }
function applyIconSettings(){ document.documentElement.style.setProperty('--icon-size', SETTINGS.iconSize + 'px'); let radius='50%'; if(SETTINGS.iconShape==='square') radius='8px'; if(SETTINGS.iconShape==='round') radius='20%'; document.documentElement.style.setProperty('--icon-radius', radius); document.querySelectorAll('.app-icon').forEach(i=>i.style.borderRadius = radius); }
function bootSeq(){ setTimeout(()=>{ const boot = document.getElementById('boot'); boot.classList.add('hidden'); document.getElementById('lock').classList.remove('hidden'); checkRequiredIcons(); }, 15000); }
function enableGestures(){ const lock = document.getElementById('lock'); let sy = 0; lock.addEventListener('touchstart', e=> sy = e.touches[0].clientY, {passive:true}); lock.addEventListener('touchend', e=> { const dy = sy - e.changedTouches[0].clientY; if(dy > 60) transitionToHome(); }, {passive:true}); const gbar = document.getElementById('gestureBar'); gbar.addEventListener('touchstart', e=> sy = e.touches[0].clientY, {passive:true}); gbar.addEventListener('touchend', e=> { const dy = sy - e.changedTouches[0].clientY; if(dy > 50) transitionToHome(); }, {passive:true}); document.querySelectorAll('.dock-btn').forEach(b=> b.addEventListener('click', ()=>{ const id=b.getAttribute('data-app'); openApp(id); })); const appWin = document.getElementById('appWindow'); let as=0; appWin.addEventListener('touchstart', e=> as=e.touches[0].clientY, {passive:true}); appWin.addEventListener('touchend', e=> { const dy = as - e.changedTouches[0].clientY; if(dy>60) closeApp(); }, {passive:true}); }
function transitionToHome(){ const lock = document.getElementById('lock'); const home = document.getElementById('home'); lock.style.transition = 'transform 400ms ease, opacity 400ms ease'; lock.style.transform = 'translateY(-10%)'; lock.style.opacity = '0'; setTimeout(()=>{ lock.classList.add('hidden'); lock.style.transform=''; lock.style.opacity=''; home.classList.remove('hidden'); }, 420); }
function openApp(id){ if(id === 'notas') return openNotes(); if(id === 'navegador') return openBrowser(); if(id === 'galeria') return openGallery(); if(id === 'camara') return openCamera(); if(id === 'configuracion') return openConfig(); if(id === 'sobre') return openSobre(); }
function showOverlay(html){ const win = document.getElementById('appWindow'); const content = document.getElementById('appContent'); content.innerHTML = html; win.classList.remove('hidden'); win.style.display = 'flex'; win.setAttribute('aria-hidden','false'); content.style.animation = 'app-in 400ms ease'; }
function closeApp(){ const win = document.getElementById('appWindow'); win.classList.add('hidden'); win.style.display = 'none'; document.getElementById('home').classList.remove('hidden'); document.getElementById('appContent').innerHTML = ''; }
function openConfig(){ const tpl = document.getElementById('tpl-config').content.cloneNode(true); showOverlay(''); const content = document.getElementById('appContent'); content.appendChild(tpl); content.querySelectorAll('.cfg-row').forEach(el=> el.addEventListener('click', ()=>{ const key = el.getAttribute('data-key'); if(key === 'about') openSobre(); if(key === 'lang') chooseLanguage(); if(key === 'wall') chooseWallpaper(); if(key === 'style') showStyle(); if(key === 'height') showStyle(); })); }
function openSobre(){ const tpl = document.getElementById('tpl-sobre').content.cloneNode(true); showOverlay(''); const content = document.getElementById('appContent'); content.appendChild(tpl); }
function chooseWallpaper(){ const picker = document.createElement('input'); picker.type='file'; picker.accept='image/*'; picker.onchange = e=>{ const f = e.target.files[0]; if(!f) return; const r = new FileReader(); r.onload = ev=>{ const data=ev.target.result; const which = confirm('OK=Inicio, Cancel=Bloqueo') ? 'home' : 'lock'; if(which==='home') localStorage.setItem('vex_wall_home', data); else localStorage.setItem('vex_wall_lock', data); applyBackgrounds(); showToast('Fondo aplicado'); }; r.readAsDataURL(f); }; picker.click(); }
function applyBackgrounds(){ const h = localStorage.getItem('vex_wall_home'); const l = localStorage.getItem('vex_wall_lock'); if(h) document.getElementById('home').style.backgroundImage = `url(${h})`; if(l) document.getElementById('lock').style.backgroundImage = `url(${l})`; }
function showStyle(){ const content=document.getElementById('appContent'); content.innerHTML = `<div style="padding:12px"><h2>Altura y estilo</h2><label>Tama√±o (px): <input id="sizeRange" type="range" min="40" max="120" value="${SETTINGS.iconSize}"></label><div style="height:8px"></div><label>Forma: <select id="shapeSel"><option value="circle">Circular</option><option value="round">Redondeado</option><option value="square">Cuadrado</option></select></label><div style="height:12px"></div><button onclick="applyStyle()">Aplicar</button> <button onclick="closeApp()">Atr√°s</button></div>`; document.getElementById('shapeSel').value = SETTINGS.iconShape || 'circle'; }
function applyStyle(){ const v=parseInt(document.getElementById('sizeRange').value,10); const s=document.getElementById('shapeSel').value; SETTINGS.iconSize=v; SETTINGS.iconShape=s; localStorage.setItem(SETTINGS_KEY, JSON.stringify(SETTINGS)); applyIconSettings(); showSub('<h2>Estilo aplicado</h2><button onclick="closeApp()">Atr√°s</button>'); }
function showSub(html){ const content=document.getElementById('appContent'); content.innerHTML = `<div style="padding:12px">${html}</div>`; }
function chooseLanguage(){ const langs = ['es','en','pt']; const sel = prompt('Elige idioma: es (Espa√±ol), en (Ingl√©s), pt (Portugu√©s)'); if(!sel) return; if(!langs.includes(sel)){ alert('Idioma no soportado'); return; } localStorage.setItem('vex_lang', sel); showToast('Idioma aplicado. Se reiniciar√° la interfaz...'); setTimeout(()=> location.reload(), 900); }
let camStream=null;
async function openCamera(){ const html = `<div style="display:flex;flex-direction:column;height:100%"><video id="camVideo" autoplay playsinline style="flex:1;object-fit:cover;background:#000;border-radius:8px"></video><div style="display:flex;gap:12px;padding:10px;justify-content:space-between;align-items:center"><button onclick="openGallery()">Abrir galer√≠a</button><button id="takeBtn" style="width:72px;height:72px;border-radius:50%;background:#fff;border:none">üì∏</button><button id="switchCam">üîÑ</button></div><div style="height:12px"></div><button onclick="closeApp()">Cerrar</button></div>`; showOverlay(html); const vid = document.getElementById('camVideo'); let facing='environment'; try{ camStream = await navigator.mediaDevices.getUserMedia({video:{facingMode:facing}}); vid.srcObject = camStream; }catch(e){ vid.poster = ''; vid.style.background = '#111 url("data:image/svg+xml;utf8,' + encodeURIComponent('<svg xmlns="http://www.w3.org/2000/svg" width="400" height="300"><rect width="100%" height="100%" fill="#000"/><text x="50%" y="50%" fill="#fff" font-size="18" text-anchor="middle">Vista previa no disponible</text></svg>') + '") center/cover no-repeat'; } setTimeout(()=>{ const take = document.getElementById('takeBtn'); if(take) take.addEventListener('click', ()=>{ try{ const canvas = document.createElement('canvas'); canvas.width = vid.videoWidth || 640; canvas.height = vid.videoHeight || 480; const ctx = canvas.getContext('2d'); ctx.drawImage(vid,0,0,canvas.width,canvas.height); const data = canvas.toDataURL('image/png'); let fotos = JSON.parse(localStorage.getItem('galeria')||'[]'); if(fotos.length >= MAX_GALLERY){ showToast('Galer√≠a llena. Borra fotos para continuar.'); return; } fotos.unshift(data); localStorage.setItem('galeria', JSON.stringify(fotos)); showToast('üì∑ Foto guardada'); }catch(err){ showToast('No se pudo tomar foto'); } }); const sw = document.getElementById('switchCam'); if(sw) sw.addEventListener('click', ()=>{ showToast('Cambiar c√°mara (demo)'); }); },200); }
function openGallery(){ const tpl = document.getElementById('tpl-gallery').content.cloneNode(true); showOverlay(''); const content = document.getElementById('appContent'); content.appendChild(tpl); const wrap = document.getElementById('galGrid'); const fotos = JSON.parse(localStorage.getItem('galeria')||'[]'); if(fotos.length===0){ wrap.innerHTML = '<p style="opacity:.7">Galer√≠a vac√≠a. Usa C√°mara para tomar fotos o Configuraci√≥n ‚Üí Fondo de pantalla.</p>'; } fotos.forEach((d,i)=>{ const el = document.createElement('div'); el.innerHTML = `<img src="${d}" alt="foto${i}">`; wrap.appendChild(el); }); document.getElementById('clearAll').addEventListener('click', ()=>{ if(!confirm('¬øQuieres borrar todas las im√°genes de la galer√≠a?')) return; localStorage.removeItem('galeria'); wrap.innerHTML = '<p style="opacity:.7">Galer√≠a vac√≠a.</p>'; showToast('Galer√≠a borrada'); }); }
function openNotes(){ showOverlay('<div style="padding:12px"><h2>Notas</h2><p>Esta aplicaci√≥n todav√≠a no tiene proceso. Pr√≥ximamente.</p><div style="height:12px"></div><button onclick="closeApp()">Atr√°s</button></div>'); }
function openBrowser(){ showOverlay('<div style="padding:12px"><h2>Navegador</h2><p>El navegador todav√≠a no tiene proceso operativo. Pr√≥ximamente.</p><div style="height:12px"></div><button onclick="closeApp()">Atr√°s</button></div>'); }
document.addEventListener('DOMContentLoaded', ()=>{ applyBackgrounds(); buildHome(); enableGestures(); bootSeq(); document.getElementById('dock').style.display='flex'; checkRequiredIcons(); });